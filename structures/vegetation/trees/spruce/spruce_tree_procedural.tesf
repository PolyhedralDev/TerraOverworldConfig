// Free to modify variables
num leafRadius = 3 + randomInt(4);
num trunkHeight = 10 + randomInt(7);
num leafTopHeight = trunkHeight * 1.3;
num leafBottomHeight = 1 + randomInt(8);
str trunkBlockX = "minecraft:spruce_log[axis=x]";
str trunkBlockY = "minecraft:spruce_log[axis=y]";
str trunkBlockZ = "minecraft:spruce_log[axis=z]";
str leafBlock   = "minecraft:spruce_leaves[distance=1,persistent=false]";

num leafMidPointRatio = 0.1;
num leafMidHeight = leafBottomHeight + (leafTopHeight-leafBottomHeight) * leafMidPointRatio;
for (num y = 0; y <= leafTopHeight; y = y + 1) {
    num radius = 0;
    if (y < leafMidHeight) {
        radius = (-pow((y-leafMidHeight)/(leafBottomHeight-leafMidHeight),2)+1)*leafRadius;
    } else {
        radius = (-pow((y-leafMidHeight)/(leafTopHeight-leafMidHeight),2)+1)*leafRadius;
    }
    if (y >= leafBottomHeight) {

        if (radius <= 1) { // Skip generating circle if radius is less than 1
            block(0, y, 0, leafBlock);
        } else {
            num squareradius = radius * radius; // Square the radius to avoid unnecessary square root when comparing dist
            for (num x = round(-radius); x <= round(radius); x = x + 1) {
                for (num z = round(-radius); z <= round(radius); z = z + 1) {
                    num squaredist = x*x+z*z;
                    if ((squaredist <= squareradius && sin(3.1415926 * y) > 0) || squaredist <= squareradius / 3) {
                        if (squareradius - squaredist < squareradius * 0.4) { // If close to edge
                            if (randomInt(2) == 0) {
                                block(x, y, z, leafBlock, false);
                            }
                        } else {
                            block(x, y, z, leafBlock, false);
                        }
                    }
                }
            }
        }
    }

    if (y <= trunkHeight) {
        block(0, y, 0, trunkBlockY); // Main trunk
    }
}

block(0, -1, 0, "minecraft:dirt");