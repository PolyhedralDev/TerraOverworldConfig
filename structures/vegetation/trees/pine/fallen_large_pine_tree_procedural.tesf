num randPrecision = 100;
num goldenAngle = 2.39996;
num pi = 3.14159;

num length = 14+randomInt(4);
num trunkRadius = 1.5;
num buffer = 10;
num scanOffset = 5;

num mushroomChance = 8;
num vineChance = 2;

// Direction vector
num dx = (randomInt(randPrecision)/randPrecision-0.5)*1.5;
num dy = 0;
num dz = (randomInt(randPrecision)/randPrecision-0.5)*1.5;

str woodBlockX = "minecraft:pale_oak_log[axis=x]";
str woodBlockY = "minecraft:pale_oak_log[axis=y]";
str woodBlockZ = "minecraft:pale_oak_log[axis=z]";

str rootBlock = "minecraft:pale_oak_wood";

// Generate roots at base of trunk
num roots = 4+randomInt(3);
num rootMaxDepth = 3;
num rootHeight = 6;
num rootLength = 4;
num rootAngle = randomInt(randPrecision)/randPrecision*2*pi;
for (num r = 0; r < roots; r = r + 1) {
    num rdx = sin(rootAngle);
    num rdz = cos(rootAngle);

    for (num l = 0; l <= (rootLength+randomInt(3)); l = l + 1) {
        num height = (rootHeight) * (1-(l/rootLength));
        bool bottomedOut = false;
        for (num h = height; h >= -rootMaxDepth; h = h - 1) {
            if (check(round(l*rdx),round(h),round(l*rdz)) != "AIR") {
                bottomedOut = true;
                break;
            }
            block(l*rdx, h, l*rdz, rootBlock);
        }
        if (!bottomedOut) break;
    }
    rootAngle = rootAngle + goldenAngle;
}

for (num h = 0; h < 7; h = h + 1) {
    block(0,h,0, woodBlockY, true);
    block(1,h,0, woodBlockY, true);
    block(1,h,1, woodBlockY, true);
    block(0,h,1, woodBlockY, true);
}

length = length+buffer;
for(num l = buffer; l <= length; l = l + 1) {

    str setBlock = woodBlockX;
    if (abs(dx) > max(abs(dy),abs(dz))) setBlock = woodBlockX;
    else if (abs(dz) > max(abs(dy),abs(dx))) setBlock = woodBlockZ;

    num yTranslate = scanOffset;
    while (check(l*dx, yTranslate-1, l*dz) != "LAND" &&
    check(l*dx+1, yTranslate-1, l*dz) != "LAND" &&
    check(l*dx+1, yTranslate-1, l*dz+1) != "LAND" &&
    check(l*dx, yTranslate-1, l*dz+1) != "LAND") yTranslate = yTranslate-1;

    if (getBlock(l*dx, yTranslate-1, l*dz) == woodBlockX) continue;

    num r = trunkRadius;
    // Generate sphere at each point
    for(num x = -r; x <= r; x = x + 1) {
        for(num y = -r; y <= r; y = y + 1) {
            for(num z = -r; z <= r; z = z + 1) {
                if (pow(x,2)+pow(y,2)+pow(z,2) < pow(r,2)) {
                    block(l*dx + x, yTranslate + y, l*dz + z, setBlock, true);
                }
            }
        }
    }

    str mushroomBlock = "minecraft:red_mushroom";
    if (randomInt(2) == 0) mushroomBlock = "minecraft:brown_mushroom";
    if (randomInt(mushroomChance) == 0) block(l*dx, yTranslate + 1, l*dz, mushroomBlock, false);

    num xOffset = 1;
    if (randomInt(2) == 0) xOffset = -1;
    if (randomInt(4) == 0) xOffset = xOffset*2;

    num zOffset = 1;
    if (randomInt(2) == 0) zOffset = -1;
    if (randomInt(4) == 0) xOffset = xOffset*2;

    if (randomInt(vineChance) == 0) {
        structure(l*dx + xOffset, yTranslate, l*dz + zOffset, "vine_block", "NONE");
        structure(l*dx + xOffset, yTranslate - 1, l*dz + zOffset, "vine_block", "NONE");
    }

}